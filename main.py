import mysql.connector
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from telebot.types import LabeledPrice
import psycopg2
import time
import config
from prompt import *
import MySQLdb
bot = telebot.TeleBot(TOKEN_BOT)




NATIONS = {"–ë–µ–ª—ã–µ": "white", "–ï–≤—Ä–æ–ø–µ–π—Ü—ã": "european", "–ß–µ—Ä–Ω—ã–µ": "black", "–õ–∞—Ç–∏–Ω—ã": "latin",
                   "–†—É—Å—Å–∫–∏–µ": "russian",
                   "–ê–≤—Å—Ç—Ä–∏–π—Ü—ã": "austrian", "–ê–º–µ—Ä–∏–∫–∞–Ω—Ü—ã": "american", "–ê—Ä–∞–±—ã": "arab", "–ê—Ä–º—è–Ω–µ": "armenian",
                   "–ë–µ–ª–æ—Ä—É—Å—ã": "belarusian", "–ë—Ä–∞–∑–∏–ª—å—Ü—ã": "brazilian", "–ë—Ä–∏—Ç–∞–Ω—Ü—ã": "british", "–†—É–º—ã–Ω—ã": "romanians",
                   "–¢–∞—Ç–∞—Ä—ã": "tatar", "–¢—É—Ä–∫–∏": "turk", "–í—å–µ—Ç–Ω–∞–º—Ü—ã": "vietnamese", "–ì—Ä–µ–∫–∏": "greek",
                   "–ì—Ä—É–∑–∏–Ω—ã": "georgian", "–ï–≥–∏–ø—Ç—è–Ω–µ":"egyptian", "–ò—Å–ø–∞–Ω—Ü—ã":"spaniard", "–ò—Ç–∞–ª—å—è–Ω—Ü—ã":"italian",
                   "–ö–∞–∑–∞—Ö–∏":"kazakhs","–ö–∏—Ç–∞–π—Ü—ã":"chinese","–ö–æ—Ä–µ–π—Ü—ã":"korean","–Ø–ø–æ–Ω—Ü—ã":"japanese","–ù–µ–º—Ü—ã":"german",
                   "–ü–µ—Ä—Å—ã":"persian","–ü–æ–ª—è–∫–∏":"pole","–ü–æ—Ä—Ç—É–≥–∞–ª—å—Ü—ã":"portuguese","–£–∫—Ä–∞–∏–Ω—Ü—ã":"ukrainians","–§—Ä–∞–Ω—Ü—É–∑—ã":"french",
                   "–ß–µ—Ö–∏":"czech","–®–≤–µ–¥—ã":"swede"}

RACES = {"–ß–µ–ª–æ–≤–µ–∫":"human","–ê–Ω–≥–µ–ª":"angel","–î–µ–º–æ–Ω":"demon","–†–µ–ø—Ç–∏–ª–∏—è":"reptile","–†–æ–±–æ—Ç":"robot","–°—É–∫–∫—É–±":"succubus",
             "–§–µ—è":"fairy","–§—É—Ä—Ä–∏":"furry","–≠–ª—å—Ñ":"elf"}



BODY = {"–ù–∞–∫–∞—á–µ–Ω–Ω–æ–µ":"muscular", "–ü—É—Ö–ª–æ–µ":"plump", "–ü—ã—à–Ω–æ–µ":"busty", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ":"sporty", "–¢–æ–ª—Å—Ç–æ–µ":"fat", "–•—É–¥–æ–µ":"skinny"}


BOOBS = {"–û–≥—Ä–æ–º–Ω–∞—è":"huge_b","–ë–æ–ª—å—à–∞—è":"big_b", "–°—Ä–µ–¥–Ω—è—è":"medium-sized_b","–ú–∞–ª–µ–Ω—å–∫–∞—è":"small_b","–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è":"natural_b"}

ASS = {"–û–≥—Ä–æ–º–Ω—ã–µ":"huge_a","–ë–æ–ª—å—à–∏–µ":"big_a", "–°—Ä–µ–¥–Ω–∏–µ":"medium-sized_a","–ú–∞–ª–µ–Ω—å–∫–∏–µ":"small_a","–ö—Ä—É–≥–ª—ã–µ":"round_a"}

LEGS = {"–¢–æ–ª—Å—Ç—ã–µ":"fat_l", "–ü—ã—à–Ω—ã–µ":"busty_l", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ":"sporty_l", "–•—É–¥—ã–µ":"skinny_l"}

HAIRCUT = {"–î–ª–∏–Ω–Ω—ã–µ":"long", "–°—Ä–µ–¥–Ω–∏–µ":"middle-length","–ö–æ—Ä–æ—Ç–∫–∏–µ":"short","–ö–æ—Å–∞":"braid","–ö–∞—Ä–µ":"bob","–•–≤–æ—Å—Ç":"ponytail","–ò—Ä–æ–∫–µ–∑":"mohawk"}

HAIRCOLOR = {"–ë–ª–æ–Ω–¥":"blonde_h", "–ë—Ä—é–Ω–µ—Ç(–∫–∞)":"brunette_h", "–†—ã–∂–∏–π":"orange_h", "–ë–µ–ª—ã–π":"white_h", "–ö—Ä–∞—Å–Ω—ã–π": "red_h", "–†–æ–∑–æ–≤—ã–π":"pink_h", "–°–∏–Ω–∏–π": "blue_h",
             "–ñ–µ–ª—Ç—ã–π":"yellow_h", "–ó–µ–ª–µ–Ω—ã–π": "green_h", "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π": "purple_h"}

EYESCOLOR = {"–ó–µ–ª–µ–Ω—ã–µ":"green_e", "–ö–∞—Ä–∏–µ":"brown_e", "–°–µ—Ä—ã–µ": "grey_e", "–ì–æ–ª—É–±—ã–µ": "blue_e"}

CLOTHES = {"–ì–æ–ª–∞—è(—ã–π)": "naked", "–ü–ª–∞—Ç—å–µ": "dress", "–•–∏–¥–∂–∞–±": "hijab", "–®–∫–æ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞": "school uniform",
           "–•–∞–ª–∞—Ç":"bathrobe", "–ú–∏–Ω–∏-—é–±–∫–∞":"mini skirt", "–ß—É–ª–∫–∏":"cotton thick black stockings", "–ö—É–ø–∞–ª—å–Ω–∏–∫":"swimsuit",
           "–õ–∞—Ç–µ–∫—Å–Ω—ã–π –∫–æ—Å—Ç—é–º":"thick black latex suit", "–•–µ–ª–ª–æ—É–∏–Ω –∫–æ—Å—Ç—é–º":"halloween costume", "–ö–æ—Ä—Å–µ—Ç":"corset",
           "–ê–Ω—Ç–∏—á–Ω–∞—è –æ–¥–µ–∂–¥–∞":"antique clothes"}

POSES = {"–ù–∞ —á–µ—Ç–≤.":"on all fours", "–ù–∞ —Å–ø–∏–Ω–µ":"lying on back", "–ù–∞ –∂–∏–≤–æ—Ç–µ":"lying on stomach", "–ù–∞ –±–æ–∫—É":"on side",
         "–ü–æ–ª–∑–µ—Ç":"crawl","–¢–∞–Ω—Ü—É–µ—Ç":"dance","–õ–µ–∂–∏—Ç":"laying","–ú–æ–¥–µ–ª—å–Ω–∞—è":"model","–†–∞–∑–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–æ–≥–∏":"spreaded legs",
         "–í –ø—Ä–∏—Å—è–¥–µ":"squatting","–°—Ç–æ–∏—Ç":"standing","–ô–æ–≥–∞":"yoga"}

AGES = {'18-24':'21_a', '25-30':'27_a', '31-40': '36_a', '41-50':'46_a','51-60':'56_a', '60+':'65_a'}


EMOTIONS = {"–ê—Ö–µ–≥–∞–æ":"ahegao", "–û—Ä–≥–∞–∑–º":"orgasm", "–•–æ—Ä–Ω–∏":"horny", "–°—á–∞—Å—Ç—å–µ":"happy", "–£–ª—ã–±–∫–∞":"smile", "–ú–∏–ª–∞—è":"cute", "–ì—Ä—É—Å—Ç–Ω–∞—è":"sad", "–ü–ª–∞—á—É—â–∞—è":"crying", "–ó–ª–∞—è":"angry", "–°–µ—Ä—å–µ–∑–Ω–∞—è":"serious"}

PLACES = {"–ó–∞–º–æ–∫":"castle", "–†–µ–∫–∞":"river", "–ë–∞—Ä":"bar", "–í–∞–Ω–Ω–∞—è":"bathroom", "–ü–ª—è–∂":"beach", "–ö—Ä–æ–≤–∞—Ç—å":"bed", "–ê–≤—Ç–æ–±—É—Å":"bus",
          "–ö–∞—Ñ–µ":"cafe", "–ö–∞–∑–∏–Ω–æ":"casino", "–ü–µ—â–µ—Ä–∞":"cave", "–¶–µ—Ä–∫–æ–≤—å":"church", "–ü—É—Å—Ç—ã–Ω—è":"desert", "–õ–µ—Å":"forest",
          "–ì–æ—Å–ø–∏—Ç–∞–ª—å":"hospital", "–ö—É—Ö–Ω—è":"kitchen", "–ì–æ—Ä—ã":"mountains", "–ü—Ä–∞–∑–¥–Ω–∏–∫":"party", "–ë–∞—Å—Å–µ–π–Ω":"pool",
          "–†–µ—Å—Ç–æ—Ä–∞–Ω":"restautant", "–°–∞—É–Ω–∞":"sauna", "–£–ª–∏—Ü–∞":"street", "–Ø—Ö—Ç–∞":"yacht"}



PRICE_ONCE = LabeledPrice(label="–†–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂", amount=10*100)
PRICE_1_MONTH = LabeledPrice(label="1 –º–µ—Å—è—Ü", amount=50*100)
PRICE_3_MONTH = LabeledPrice(label="3 –º–µ—Å—è—Ü–∞", amount=100*100)
PRICE_12_MONTH = LabeledPrice(label="12 –º–µ—Å—è—Ü–µ–≤", amount=400*100)


try:
    # –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = MySQLdb.connect(host="176.124.213.136", user="gen_user", passwd="#x*NP&6h\\\AGsY", db="default_db", port=3306)
#     conn = mysql.connector.connect(user='coon4i', password='OVERPLANET',
#                                    host='coon4i.mysql.pythonanywhere-services.com',
#                                    database='coon4i$default', connect_timeout=28800)
    cursor = conn.cursor()
    cursor.execute(
        """CREATE TABLE IF NOT EXISTS subscriptions(
            id_s INTEGER,
            sub_until varchar(30),
            PROMPT varchar(1000),
            STYLE varchar(50),
            MESSAGES varchar(1000)
            );"""
    )
    conn.commit()

except:
    # –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ STDOUnaT
    print('Can`t establish connection to database')


def choice_menu(call_id, id):
    markup = InlineKeyboardMarkup()
    button_style = InlineKeyboardButton(text="–°—Ç–∏–ª—å", callback_data="—Å—Ç–∏–ª—å")
    button_number = InlineKeyboardButton(text="–ö–æ–ª-–≤–æ –ø–µ—Ä—Å.", callback_data="–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
    button_pose = InlineKeyboardButton(text="–ü–æ–∑–∞", callback_data="–ø–æ–∑–∞")
    button_gender = InlineKeyboardButton(text="–ü–æ–ª", callback_data="–ø–æ–ª")
    button_nation = InlineKeyboardButton(text="–ù–∞—Ü–∏—è", callback_data="–Ω–∞—Ü–∏—è")
    button_age = InlineKeyboardButton(text="–í–æ–∑—Ä–∞—Å—Ç", callback_data="–≤–æ–∑—Ä–∞—Å—Ç")
    button_race = InlineKeyboardButton(text="–†–∞—Å—ã", callback_data="—Ä–∞—Å—ã")
    button_body = InlineKeyboardButton(text="–§–∏–≥—É—Ä–∞", callback_data="—Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ")
    button_boobs = InlineKeyboardButton(text="–ì—Ä—É–¥—å", callback_data="–≥—Ä—É–¥—å")
    button_ass = InlineKeyboardButton(text="–Ø–≥–æ–¥–∏—Ü—ã", callback_data="–ø–æ–ø–∞")
    button_legs = InlineKeyboardButton(text="–õ—è–∂–∫–∏", callback_data="–ª—è–∂–∫–∏")
    button_tatoo = InlineKeyboardButton(text="–¢–∞—Ç—É", callback_data="—Ç–∞—Ç—É")
    button_hair = InlineKeyboardButton(text="–í–æ–ª–æ—Å—ã", callback_data="–≤–æ–ª–æ—Å—ã")
    button_haircolor = InlineKeyboardButton(text="–¶–≤–µ—Ç –≤–æ–ª–æ—Å", callback_data="—Ü–≤–µ—Ç –≤–æ–ª–æ—Å")
    button_eyescolor = InlineKeyboardButton(text="–¶–≤–µ—Ç –≥–ª–∞–∑", callback_data="—Ü–≤–µ—Ç –≥–ª–∞–∑")
    button_clothes = InlineKeyboardButton(text="–û–¥–µ–∂–¥–∞", callback_data="–æ–¥–µ–∂–¥–∞")
    #button_emotions = InlineKeyboardButton(text="–õ–∏—Ü–æ", callback_data="–ª–∏—Ü–æ")
    button_places = InlineKeyboardButton(text="–õ–æ–∫–∞—Ü–∏–∏", callback_data="–ª–æ–∫–∞—Ü–∏–∏")
    button_confirm = InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")
    button_again = InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")
    markup.add(button_style, button_gender, button_number, button_pose, button_nation, button_age, button_race, button_body, button_boobs, button_ass, button_legs, button_tatoo, button_hair, button_haircolor, button_eyescolor, button_clothes, button_places, button_confirm, button_again)
    id_of_message = bot.send_message(call_id, "‚úèÔ∏è –í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üëá\n\n‚ùóÔ∏è –£—á—Ç–∏, —á—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º\n\n‚è™ –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –∏—Å–ø–æ–ª—å–∑—É–π:  /menu\n\n‚ö†Ô∏è –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç —Å–±—Ä–æ—à–µ–Ω—ã", reply_markup=markup).message_id
    TO_ADD = f'"choice_menu":{id_of_message}, '
    ADD_MESSAGES_IDS(id, TO_ADD)


def GREETING_START_MENU(call_id):
    markup = InlineKeyboardMarkup()
    button_start = InlineKeyboardButton(text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")
    button_sub = InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∫–∞", callback_data="–ø–æ–¥–ø–∏—Å–∫–∞")
    button_support = InlineKeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup.add(button_start, button_sub, button_support)
    bot.send_message(call_id, "‚úåÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!\n\nüîç –û—Ç—Å—é–¥–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, —É–∑–Ω–∞—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π üëá\n\n", reply_markup=markup)


def DEFAULT_START_MENU(call_id):
    markup = InlineKeyboardMarkup()
    button_start = InlineKeyboardButton(text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")
    button_sub = InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∫–∞", callback_data="–ø–æ–¥–ø–∏—Å–∫–∞")
    button_support = InlineKeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup.add(button_start, button_sub, button_support)
    bot.send_message(call_id,"üìå –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n\nüîç –û—Ç—Å—é–¥–∞ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, —É–∑–Ω–∞—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π üëá\n\n", reply_markup=markup)


def FACE_MENU(call_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="–≠–º–æ—Ü–∏—è", callback_data="—ç–º–æ—Ü–∏—è"),
               InlineKeyboardButton(text="–ë—Ä–æ–≤–∏", callback_data="–±—Ä–æ–≤–∏"),
               InlineKeyboardButton(text="–ì—É–±—ã", callback_data="–≥—É–±—ã"),
               InlineKeyboardButton(text="–ù–æ—Å", callback_data="–Ω–æ—Å"),
               InlineKeyboardButton(text="–ú–∞–∫–∏—è–∂", callback_data="–º–∞–∫–∏—è–∂"),
               InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
    bot.send_message(chat_id=call_id, text="‚úèÔ∏è –í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üëá\n\n‚ùóÔ∏è –£—á—Ç–∏, —á—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º", reply_markup=markup)


def days_to_sec(days):
    return days * 24 * 60 * 60


def time_remain(id):
    with conn.cursor() as cursor:
        cursor.execute(
            ""f"SELECT sub_until FROM subscriptions WHERE id_s = {id}"""
        )
        remained = int(cursor.fetchone()[0])
        if remained != 0:
            remain = remained - int(time.time())
            if remain:
                return True
            else:
                return False
        else:
            return False


def UPDATE(id, value):
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
            SET PROMPT = '{value}'
	        WHERE id_s = {id};"""
        )
        conn.commit()

def GET_PROMPT(id):
    with conn.cursor() as cursor:
        cursor.execute(
            f"""SELECT PROMPT FROM subscriptions WHERE id_s = {id};"""
        )
        return cursor.fetchone()

def GET_STYLE(id):
    with conn.cursor() as cursor:
        cursor.execute(
            f"""SELECT STYLE FROM subscriptions WHERE id_s = {id};"""
        )
        return cursor.fetchone()

def ADD_STYLE(id, style):
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
                SET STYLE = '{style}'
    	        WHERE id_s = {id};"""
        )
        conn.commit()

def GET_MESSAGES_IDS(id):
    with conn.cursor() as cursor:
        cursor.execute(
            f"""SELECT MESSAGES FROM subscriptions WHERE id_s = {id};"""
        )
        return cursor.fetchone()

def ADD_MESSAGES_IDS(id, value):
    prev_value = ", ".join(GET_MESSAGES_IDS(id))
    value = prev_value + value
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
                SET MESSAGES = '{value}'
    	        WHERE id_s = {id};"""
        )
        conn.commit()

@bot.message_handler(commands=['start'])
def start(message):

    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="–Ø —Å–æ–≥–ª–∞—Å–µ–Ω", callback_data="—è —Å–æ–≥–ª–∞—Å–µ–Ω"))
    bot.send_message(message.chat.id, f"üëãüèº –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\nüìù –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <a href='https://telegra.ph/Polzovatelskoe-Soglashenie-bot-08-23'>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º</a> üëá\n\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–Ø —Å–æ–≥–ª–∞—Å–µ–Ω¬ª, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –í–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 18 –ª–µ—Ç –∏ –í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", reply_markup=markup, parse_mode="HTML")


@bot.message_handler(commands=['menu'])
def menu(message):
    bot.delete_message(message.chat.id, message.message_id)
    cursor = conn.cursor()
    MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(message.from_user.id)) + '}')
    MESSAGES_IDS = list(MESSAGES_IDS.values())
    for key in MESSAGES_IDS:
        try:
            bot.delete_message(chat_id=message.chat.id, message_id=key)
        except:
            pass
    UPDATE(message.from_user.id, '{"ccc":"naked", ')
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
                        SET MESSAGES = '{chr(123)}"shablon":"777", '
            	        WHERE id_s = {message.from_user.id};"""
        )
        conn.commit()
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
                        SET PROMPT = '{chr(123)}"clothes":"naked", '
            	        WHERE id_s = {message.from_user.id};"""
        )
        conn.commit()
    DEFAULT_START_MENU(message.chat.id)

@bot.message_handler(content_types=['text'])
def messages(message):
    global DURATION
    call_id = message.chat.id


    if message.text == "–†–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂":
        DURATION = ""
        bot.send_invoice(
            message.chat.id,  # chat_id
            'Subscription for once',  # title
            'This is test subscription with once during',
            # description
            provider_token=PAYMASTER_TOKEN,  # provider_token
            currency='rub',  # currency
            prices=[PRICE_ONCE],
            is_flexible=False,  # True If you need to set up Shipping Fee
            start_parameter='sub_once',
            invoice_payload="test-invoice-payload")

    if message.text == "–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É":
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        button1 = "1 –º–µ—Å—è—Ü"
        button2 = "3 –º–µ—Å—è—Ü–∞"
        button3 = "12 –º–µ—Å—è—Ü–µ–≤"
        markup.add(button1, button2, button3)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=markup)
    if message.text == "1 –º–µ—Å—è—Ü" or message.text == "3 –º–µ—Å—è—Ü–∞" or message.text == "12 –º–µ—Å—è—Ü–µ–≤":
        if message.text == "1 –º–µ—Å—è—Ü":
            DURATION = message.text
            bot.send_invoice(
                message.chat.id,  # chat_id
                'Subscription for 1 month',  # title
                'This is test subscription with during 1 month',
                # description
                provider_token=PAYMASTER_TOKEN,  # provider_token
                currency='rub',  # currency
                prices=[PRICE_1_MONTH],
                is_flexible=False,  # True If you need to set up Shipping Fee
                start_parameter='sub_1_month',
                invoice_payload="test-invoice-payload")
            TIME = str(int(time.time()) + days_to_sec(30))
            cursor.execute(
                f"""UPDATE subscriptions
                 SET sub_until = {TIME}
                 WHERE id_s = {message.from_user.id};
               """
            )
            conn.commit()
        if message.text == "3 –º–µ—Å—è—Ü–∞":
            DURATION = message.text
            bot.send_invoice(
                message.chat.id,  # chat_id
                'Subscription for 3 month',  # title
                'This is test subscription with during 3 month',
                # description
                provider_token=PAYMASTER_TOKEN,  # provider_token
                currency='rub',  # currency
                prices=[PRICE_3_MONTH],
                is_flexible=False,  # True If you need to set up Shipping Fee
                start_parameter='sub_3_month',
                invoice_payload="test-invoice-payload")
            TIME = str(int(time.time()) + days_to_sec(90))
            cursor.execute(
                f"""UPDATE subscriptions
                 SET sub_until = {TIME}
                 WHERE id_s = {message.from_user.id};
               """
            )
            conn.commit()
        if message.text == "12 –º–µ—Å—è—Ü–µ–≤":
            DURATION = message.text
            bot.send_invoice(
                message.chat.id,  # chat_id
                'Subscription for 12 month',  # title
                'This is test subscription with during 12 month',
                # description
                provider_token=PAYMASTER_TOKEN,  # provider_token
                currency='rub',  # currency
                prices=[PRICE_12_MONTH],
                is_flexible=False,  # True If you need to set up Shipping Fee
                start_parameter='sub_12_month',
                invoice_payload="test-invoice-payload")
            TIME = str(int(time.time()) + days_to_sec(365))
            cursor.execute(
                f"""UPDATE subscriptions
                 SET sub_until = {TIME}
                 WHERE id_s = {message.from_user.id};
               """
            )
            conn.commit()




@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    call_id = call.message.chat.id
    cursor = conn.cursor()
    global NATIONS
    global DURATION
    global POSES
    global AGES
    global EMOTIONS


    if call.data == "–ª–æ–∫–∞—Ü–∏–∏":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ó–∞–º–æ–∫", callback_data="castle"),
                   InlineKeyboardButton(text="–†–µ–∫–∞", callback_data="river"),
                   InlineKeyboardButton(text="–ë–∞—Ä", callback_data="bar"),
                   InlineKeyboardButton(text="–í–∞–Ω–Ω–∞—è", callback_data="bathroom"),
                   InlineKeyboardButton(text="–ü–ª—è–∂", callback_data="beach"),
                   InlineKeyboardButton(text="–ö—Ä–æ–≤–∞—Ç—å", callback_data="bed"),
                   InlineKeyboardButton(text="–ê–≤—Ç–æ–±—É—Å", callback_data="bus"),
                   InlineKeyboardButton(text="–ö–∞—Ñ–µ", callback_data="cafe"),
                   InlineKeyboardButton(text="–ö–∞–∑–∏–Ω–æ", callback_data="casino"),
                   InlineKeyboardButton(text="–ü–µ—â–µ—Ä–∞", callback_data="cave"),
                   InlineKeyboardButton(text="–¶–µ—Ä–∫–æ–≤—å", callback_data="church"),
                   InlineKeyboardButton(text="–ü—É—Å—Ç—ã–Ω—è", callback_data="desert"),
                   InlineKeyboardButton(text="–õ–µ—Å", callback_data="forest"),
                   InlineKeyboardButton(text="–ì–æ—Å–ø–∏—Ç–∞–ª—å", callback_data="hospital"),
                   InlineKeyboardButton(text="–ö—É—Ö–Ω—è", callback_data="kitchen"),
                   InlineKeyboardButton(text="–ì–æ—Ä—ã", callback_data="mountains"),
                   InlineKeyboardButton(text="–ü—Ä–∞–∑–¥–Ω–∏–∫", callback_data="party"),
                   InlineKeyboardButton(text="–ë–∞—Å—Å–µ–π–Ω", callback_data="pool"),
                   InlineKeyboardButton(text="–†–µ—Å—Ç–æ—Ä–∞–Ω", callback_data="restaurant"),
                   InlineKeyboardButton(text="–°–∞—É–Ω–∞", callback_data="sauna"),
                   InlineKeyboardButton(text="–£–ª–∏—Ü–∞", callback_data="street"),
                   InlineKeyboardButton(text="–Ø—Ö—Ç–∞", callback_data="yacht"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call_id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏, –≤ –∫–∞–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá", reply_markup=markup)


    if call.data ==  "–ª–∏—Ü–æ":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–≠–º–æ—Ü–∏—è", callback_data="—ç–º–æ—Ü–∏—è"),
                   InlineKeyboardButton(text="–ë—Ä–æ–≤–∏", callback_data="–±—Ä–æ–≤–∏"),
                   InlineKeyboardButton(text="–ì—É–±—ã", callback_data="–≥—É–±—ã"),
                   InlineKeyboardButton(text="–ù–æ—Å", callback_data="–Ω–æ—Å"),
                   InlineKeyboardButton(text="–ú–∞–∫–∏—è–∂", callback_data="–º–∞–∫–∏—è–∂"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call_id, message_id=call.message.message_id, text="‚úèÔ∏è –í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üëá\n\n‚ùóÔ∏è –£—á—Ç–∏, —á—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º", reply_markup=markup)



    if call.data == "—ç–º–æ—Ü–∏—è":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ê—Ö–µ–≥–∞–æ", callback_data="ahegao"),
                   InlineKeyboardButton(text="–û—Ä–≥–∞–∑–º", callback_data="orgasm"),
                   InlineKeyboardButton(text="–•–æ—Ä–Ω–∏", callback_data="horny"),
                   InlineKeyboardButton(text="–°—á–∞—Å—Ç—å–µ", callback_data="happy"),
                   InlineKeyboardButton(text="–£–ª—ã–±–∫–∞", callback_data="smile"),
                   InlineKeyboardButton(text="–ú–∏–ª–∞—è", callback_data="cute"),
                   InlineKeyboardButton(text="–ì—Ä—É—Å—Ç–Ω–∞—è", callback_data="sad"),
                   InlineKeyboardButton(text="–ü–ª–∞—á—É—â–∞—è", callback_data="crying"),
                   InlineKeyboardButton(text="–ó–ª–∞—è", callback_data="angry"),
                   InlineKeyboardButton(text="–°–µ—Ä—å–µ–∑–Ω–∞—è", callback_data="serious"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="return_to_face"))
        bot.edit_message_text(chat_id=call_id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏, –∫–∞–∫—É—é —ç–º–æ—Ü–∏—é —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ üëá", reply_markup=markup)


    if call.data == "return_to_face":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–≠–º–æ—Ü–∏—è", callback_data="—ç–º–æ—Ü–∏—è"),
                   InlineKeyboardButton(text="–ë—Ä–æ–≤–∏", callback_data="–±—Ä–æ–≤–∏"),
                   InlineKeyboardButton(text="–ì—É–±—ã", callback_data="–≥—É–±—ã"),
                   InlineKeyboardButton(text="–ù–æ—Å", callback_data="–Ω–æ—Å"),
                   InlineKeyboardButton(text="–ú–∞–∫–∏—è–∂", callback_data="–º–∞–∫–∏—è–∂"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call_id, message_id=call.message.message_id, text="‚úèÔ∏è –í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üëá\n\n‚ùóÔ∏è –£—á—Ç–∏, —á—Ç–æ –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç –≤—ã–±—Ä–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º", reply_markup=markup)

    if call.data == "–ø–æ–¥–ø–∏—Å–∫–∞":
            bot.send_message(call.message.chat.id, "—Ç—É—Ç –±—É–¥–µ—Ç –∏–Ω—Ñ–∞ –ø—Ä–æ –ø–æ–¥–ø–∏—Å–∫—É")
    if call.data == "–ø–æ–¥–¥–µ—Ä–∂–∫–∞":
        markup = InlineKeyboardMarkup().add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        text = f"üì¨ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏, –æ—Ç–ø—Ä–∞–≤—å –ø–∏—Å—å–º–æ —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ –∂–∞–ª–æ–±–æ–π –Ω–∞ —ç—Ç—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É üëá\n\nüìß blabla@mail.ru\n\nüÜî –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏ –≤ –ø–∏—Å—å–º–µ ID —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: {call.from_user.id}"
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=text, reply_markup=markup)


    if call.data == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        DEFAULT_START_MENU(call_id)


    if call.data == "–æ—Ç–º–µ–Ω–∞":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        choice_menu(call_id, call.from_user.id)
    if call.data == "–≤–æ–∑—Ä–∞—Å—Ç":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='18-24', callback_data='21_a'),
                   InlineKeyboardButton(text='25-30', callback_data='27_a'),
                   InlineKeyboardButton(text='31-40', callback_data='36_a'),
                   InlineKeyboardButton(text='41-50', callback_data='46_a'),
                   InlineKeyboardButton(text='51-60', callback_data='56_a'),
                   InlineKeyboardButton(text='60+', callback_data='65_a'),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)

    if call.data in AGES.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(AGES.values()).index(call.data)
        key = list(AGES.keys())[value]
        if 'age' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['age'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω –≤–æ–∑—Ä–∞—Å—Ç: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω –≤–æ–∑—Ä–∞—Å—Ç: {key.lower()}").message_id
            TO_ADD = f'"age":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"age":"{call.data[:-2]} aged", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)



    if call.data == "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text='1', callback_data='1'),
                   InlineKeyboardButton(text='2', callback_data='2'),
                   InlineKeyboardButton(text='3', callback_data='3'),
                   InlineKeyboardButton(text='4', callback_data='4'),
                   InlineKeyboardButton(text='5', callback_data='5'),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ —Ñ–æ—Ç–æ üëá', reply_markup=markup)

    if call.data.isdigit() and 1 <= int(call.data) <= 5:
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'number' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['number'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {call.data}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {call.data}").message_id
            TO_ADD = f'"number":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"number":"{call.data} people", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data == "–ø–æ–∑–∞":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ù–∞ —á–µ—Ç–≤.", callback_data="on all fours"),
                   InlineKeyboardButton(text="–ù–∞ —Å–ø–∏–Ω–µ", callback_data="lying on back"),
                   InlineKeyboardButton(text="–ù–∞ –∂–∏–≤–æ—Ç–µ", callback_data="lying on stomach"),
                   InlineKeyboardButton(text="–ù–∞ –±–æ–∫—É", callback_data="on side"),
                   InlineKeyboardButton(text="–ü–æ–ª–∑–µ—Ç", callback_data="crawl"),
                   InlineKeyboardButton(text="–¢–∞–Ω—Ü—É–µ—Ç", callback_data="dance"),
                   InlineKeyboardButton(text="–õ–µ–∂–∏—Ç", callback_data="laying"),
                   InlineKeyboardButton(text="–ú–æ–¥–µ–ª—å–Ω–∞—è", callback_data="model"),
                   InlineKeyboardButton(text="–†–∞–∑–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–æ–≥–∏", callback_data="spreaded legs"),
                   InlineKeyboardButton(text="–í –ø—Ä–∏—Å—è–¥–µ", callback_data="squatting"),
                   InlineKeyboardButton(text="–°—Ç–æ–∏—Ç", callback_data="standing"),
                   InlineKeyboardButton(text="–ô–æ–≥–∞", callback_data="yoga"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ, –≤ –∫–∞–∫–æ–π –ø–æ–∑–µ –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ üëá', reply_markup=markup)


    if call.data == "restart":
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        MESSAGES_IDS = list(MESSAGES_IDS.values())
        for key in MESSAGES_IDS:
            try:
                bot.delete_message(chat_id=call.message.chat.id, message_id=key)
            except:
                pass
        UPDATE(call.from_user.id, '{"ccc":"naked", ')
        with conn.cursor() as cursor:
            cursor.execute(
                f"""UPDATE subscriptions   
                    SET MESSAGES = '{chr(123)}"shablon":"777", '
        	        WHERE id_s = {call.from_user.id};"""
            )
            conn.commit()
        with conn.cursor() as cursor:
            cursor.execute(
                f"""UPDATE subscriptions   
                    SET PROMPT = '{chr(123)}"clothes":"naked", '
        	        WHERE id_s = {call.from_user.id};"""
            )
            conn.commit()
        markup = InlineKeyboardMarkup()
        button_real = InlineKeyboardButton(text="–†–µ–∞–ª–∏–∑–º", callback_data="—Ä–µ–∞–ª–∏–∑–º")
        button_art = InlineKeyboardButton(text="–ê—Ä—Ç", callback_data="–∞—Ä—Ç")
        button_anime = InlineKeyboardButton(text="–ê–Ω–∏–º–µ", callback_data="–∞–Ω–∏–º–µ")
        markup.add(button_real, button_anime, button_art)
        bot.send_message(chat_id=call.message.chat.id, text="–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üëá", reply_markup=markup)


    if call.data == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É":
        PROMPT = GET_PROMPT(call.from_user.id)
        PROMPT = eval(", ".join(PROMPT) + '}')
        if len(PROMPT) == 1:
            bot.answer_callback_query(callback_query_id=call.id, text="–í—ã–±–µ—Ä–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä")
        else:
            if time_remain(call_id):
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ó–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω, –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å üïê")

                LIST = list(PROMPT.values())
                request = ', '.join(LIST)
                if ' woman' in request:
                    request += ', soft light, cinematic light, a neat vagina, beautiful, cute face, pretty face, without pants, full body, show vagina, shaved vagina, shaved body, correct anatomy of the fingers, two arms, '
                elif ' man' in request:
                    request += ', soft light, cinematic light, without pants, full body, handsome, correct anatomy of the fingers, two arms, '
                else:
                    request += ', soft light, cinematic light, without pants, full body, correct anatomy of the fingers, two arms, '
                style = ", ".join(GET_STYLE(call.from_user.id)).split('"')
                request += style[-2]
                link = zapros(request, style[-2])
                markup = InlineKeyboardMarkup()
                markup.add(InlineKeyboardButton(text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É", callback_data="restart photo"))
                bot.delete_message(call.message.chat.id, call.message.message_id)
                bot.send_photo(chat_id=call.message.chat.id, photo=f"{link}", caption=f"‚úåÔ∏è –§–æ—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n\n\nPrompt: {request}", reply_markup=markup)
                UPDATE(call.from_user.id, '{"ccc":"naked", ')
                with conn.cursor() as cursor–±–æ—Ç:
                    cursor.execute(
                        f"""UPDATE subscriptions   
                            SET MESSAGES = '{chr(123)}"shablon":"777", '
                	        WHERE id_s = {call.from_user.id};"""
                    )
                    conn.commit()
            else:
                markup = InlineKeyboardMarkup()
                markup.add(InlineKeyboardButton(text='1 –º–µ—Å—è—Ü', callback_data="1 –º–µ—Å—è—Ü"),
                           InlineKeyboardButton(text="3 –º–µ—Å—è—Ü–∞", callback_data="3 –º–µ—Å—è—Ü–∞ –ø–æ–¥–ø–∏—Å–∫–∞"),
                           InlineKeyboardButton(text="12 –º–µ—Å—è—Ü–µ–≤", callback_data="12 –º–µ—Å—è—Ü–µ–≤ –ø–æ–¥–ø–∏—Å–∫–∞"),
                           InlineKeyboardButton(text="–†–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂", callback_data="—Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂"),
                           InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ, –Ω—É–∂–Ω–æ –æ–±–ª–∞–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π –ª–∏–±–æ –≤–Ω–µ—Å—Ç–∏ —Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ üëá", reply_markup=markup)


    if call.data == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É" or call.data == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É":
        if call.data == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É":
            markup = InlineKeyboardMarkup()
            button_real = InlineKeyboardButton(text="–†–µ–∞–ª–∏–∑–º", callback_data="—Ä–µ–∞–ª–∏–∑–º")
            button_art = InlineKeyboardButton(text="–ê—Ä—Ç", callback_data="–∞—Ä—Ç")
            button_anime = InlineKeyboardButton(text="–ê–Ω–∏–º–µ", callback_data="–∞–Ω–∏–º–µ")
            markup.add(button_real, button_anime, button_art)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üëá', reply_markup=markup)
        else:
            markup = InlineKeyboardMarkup()
            button_real = InlineKeyboardButton(text="–†–µ–∞–ª–∏–∑–º", callback_data="—Ä–µ–∞–ª–∏–∑–º")
            button_art = InlineKeyboardButton(text="–ê—Ä—Ç", callback_data="–∞—Ä—Ç")
            button_anime = InlineKeyboardButton(text="–ê–Ω–∏–º–µ", callback_data="–∞–Ω–∏–º–µ")
            markup.add(button_real, button_anime, button_art)
            bot.send_message(chat_id=call.message.chat.id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üëá', reply_markup=markup)


    if call.data == "—è —Å–æ–≥–ª–∞—Å–µ–Ω":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"üëãüèº –ü—Ä–∏–≤–µ—Ç, {call.from_user.first_name}!\n\nüìù –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <a href='https://telegra.ph/Polzovatelskoe-Soglashenie-bot-08-23'>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º</a> üëá\n\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–Ø —Å–æ–≥–ª–∞—Å–µ–Ω¬ª, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –í–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 18 –ª–µ—Ç –∏ –í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", reply_markup=None, parse_mode="HTML")
        with conn.cursor() as cursor:
            cursor.execute(
                f"""INSERT INTO subscriptions
                    (id_s, sub_until, PROMPT, MESSAGES)
                    SELECT {call.from_user.id}, 0, '{chr(123)}"clothes":"naked", ', '{chr(123)}"shablon":"777", '
                    WHERE
                    NOT EXISTS (
                        SELECT id_s FROM subscriptions WHERE id_s = {call.from_user.id}
                        );"""

            )
            conn.commit()
        GREETING_START_MENU(call_id)
        #choice_menu(call_id)

    if call.data == "1 –º–µ—Å—è—Ü":
        DURATION = call.data
        bot.send_invoice(
            call.message.chat.id,  # chat_id
            'Subscription for 1 month',  # title
            'This is test subscription with during 1 month',
            # description
            provider_token=PAYMASTER_TOKEN,  # provider_token
            currency='rub',  # currency
            prices=[PRICE_1_MONTH],
            is_flexible=False,  # True If you need to set up Ship/—ã–µ—Ñ–∫ng Fee
            start_parameter='sub_1_month',
            invoice_payload="test-invoice-payload")
        TIME = str(int(time.time()) + days_to_sec(30))
        cursor.execute(
            f"""UPDATE subscriptions
                         SET sub_until = {TIME}
                         WHERE id_s = {call.message.from_user.id};
                       """
        )
        conn.commit()





    if call.data == "restart photo":
        markup = InlineKeyboardMarkup()
        button_real = InlineKeyboardButton(text="–†–µ–∞–ª–∏–∑–º", callback_data="—Ä–µ–∞–ª–∏–∑–º")
        button_art = InlineKeyboardButton(text="–ê—Ä—Ç", callback_data="–∞—Ä—Ç")
        button_anime = InlineKeyboardButton(text="–ê–Ω–∏–º–µ", callback_data="–∞–Ω–∏–º–µ")
        markup.add(button_real, button_anime, button_art)
        bot.send_message(chat_id=call.message.chat.id, text="–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üëá", reply_markup=markup)

    if call.data == "—Å—Ç–∏–ª—å":
        markup = InlineKeyboardMarkup()
        button_real = InlineKeyboardButton(text="–†–µ–∞–ª–∏–∑–º", callback_data="—Ä–µ–∞–ª–∏–∑–º")
        button_art = InlineKeyboardButton(text="–ê—Ä—Ç", callback_data="–∞—Ä—Ç")
        button_anime = InlineKeyboardButton(text="–ê–Ω–∏–º–µ", callback_data="–∞–Ω–∏–º–µ")
        markup.add(button_real, button_anime, button_art)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ, –≤ –∫–∞–∫–æ–º —Å—Ç–∏–ª–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üëá', reply_markup=markup)



    if call.data == "—Ç–∞—Ç—É":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–î–∞", callback_data="—Ç–∞—Ç—É –¥–∞"),
                   InlineKeyboardButton(text="–ù–µ—Ç", callback_data="—Ç–∞—Ç—É –Ω–µ—Ç"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–ë—É–¥–µ—Ç –ª–∏ —É –í–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Ç–∞—Ç—É?', reply_markup=markup)

    if call.data == "—Ç–∞—Ç—É –¥–∞":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'tattoo' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['tattoo'], text="‚úÖ –¢–∞—Ç—É: –µ—Å—Ç—å")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, "‚úÖ –¢–∞—Ç—É: –µ—Å—Ç—å").message_id
            TO_ADD = f'"tattoo":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += '"tattoo":"some tattooes", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data == "—Ç–∞—Ç—É –Ω–µ—Ç":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'tattoo' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['tattoo'],
                                      text="‚úÖ –¢–∞—Ç—É: –Ω–µ—Ç")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, "‚úÖ –¢–∞—Ç—É: –Ω–µ—Ç").message_id
            TO_ADD = f'"gender":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += '"tattoo":"no tattoo", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data == "–≤–æ–ª–æ—Å—ã":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–î–ª–∏–Ω–Ω—ã–µ", callback_data="long"),
                   InlineKeyboardButton(text="–°—Ä–µ–¥–Ω–∏–µ", callback_data="middle-length"),
                   InlineKeyboardButton(text="–ö–æ—Ä–æ—Ç–∫–∏–µ", callback_data="short"),
                   InlineKeyboardButton(text="–ö–æ—Å–∞", callback_data="braid"),
                   InlineKeyboardButton(text="–ö–∞—Ä–µ", callback_data="bob"),
                   InlineKeyboardButton(text="–•–≤–æ—Å—Ç", callback_data="ponytail"),
                   InlineKeyboardButton(text="–ò—Ä–æ–∫–µ–∑", callback_data="mohawk"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–µ—Å–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)



    if call.data == "—Ü–≤–µ—Ç –≤–æ–ª–æ—Å":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ë–ª–æ–Ω–¥", callback_data="blonde_h"),
                   InlineKeyboardButton(text="–ë—Ä—é–Ω–µ—Ç(–∫–∞)", callback_data="brunette_h"),
                   InlineKeyboardButton(text="–†—ã–∂–∏–π", callback_data="orange_h"),
                   InlineKeyboardButton(text="–ë–µ–ª—ã–π", callback_data="white_h"),
                   InlineKeyboardButton(text="–ö—Ä–∞—Å–Ω—ã–π", callback_data="red_h"),
                   InlineKeyboardButton(text="–†–æ–∑–æ–≤—ã–π", callback_data="pink_h"),
                   InlineKeyboardButton(text="–°–∏–Ω–∏–π", callback_data="blue_h"),
                   InlineKeyboardButton(text="–ñ–µ–ª—Ç—ã–π", callback_data="yellow_h"),
                   InlineKeyboardButton(text="–ó–µ–ª–µ–Ω—ã–π", callback_data="green_h"),
                   InlineKeyboardButton(text="–§–∏–æ–ª–µ—Ç–æ–≤—ã–π", callback_data="purple_h"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –≤–æ–ª–æ—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)



    if call.data == "—Ü–≤–µ—Ç –≥–ª–∞–∑":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ó–µ–ª–µ–Ω—ã–µ", callback_data="green_e"),
                   InlineKeyboardButton(text="–ö–∞—Ä–∏–µ", callback_data="brown_e"),
                   InlineKeyboardButton(text="–°–µ—Ä—ã–µ", callback_data="grey_e"),
                   InlineKeyboardButton(text="–ì–æ–ª—É–±—ã–µ", callback_data="blue_e"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –≥–ª–∞–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)

    if call.data == "–æ–¥–µ–∂–¥–∞":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ì–æ–ª–∞—è(—ã–π)", callback_data="naked"),
                   InlineKeyboardButton(text="–ü–ª–∞—Ç—å–µ", callback_data="dress"),
                   InlineKeyboardButton(text="–•–∏–¥–∂–∞–±", callback_data="hijab"),
                   InlineKeyboardButton(text="–®–∫–æ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞", callback_data="school uniform"),
                   InlineKeyboardButton(text="–•–∞–ª–∞—Ç", callback_data="bathrobe"),
                   InlineKeyboardButton(text="–ú–∏–Ω–∏-—é–±–∫–∞", callback_data="mini skirt"),
                   InlineKeyboardButton(text="–ß—É–ª–∫–∏", callback_data="cotton thick black stockings"),
                   InlineKeyboardButton(text="–ö—É–ø–∞–ª—å–Ω–∏–∫", callback_data="swimsuit"),
                   InlineKeyboardButton(text="–õ–∞—Ç–µ–∫—Å–Ω—ã–π –∫–æ—Å—Ç—é–º", callback_data="thick black latex suit"),
                   InlineKeyboardButton(text="–•–µ–ª–ª–æ—É–∏–Ω –∫–æ—Å—Ç—é–º", callback_data="halloween costume"),
                   InlineKeyboardButton(text="–ö–æ—Ä—Å–µ—Ç", callback_data="corset"),
                   InlineKeyboardButton(text="–ê–Ω—Ç–∏—á–Ω–∞—è –æ–¥–µ–∂–¥–∞", callback_data="antique clothes"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∞—è –æ–¥–µ–∂–¥–∞ –±—É–¥–µ—Ç —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)

    if call.data == "—Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ù–∞–∫–∞—á–µ–Ω–Ω–æ–µ", callback_data="muscular"),
                   InlineKeyboardButton(text="–ü—É—Ö–ª–æ–µ", callback_data="plump"),
                   InlineKeyboardButton(text="–ü—ã—à–Ω–æ–µ", callback_data="busty"),
                   InlineKeyboardButton(text="–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", callback_data="sporty"),
                   InlineKeyboardButton(text="–¢–æ–ª—Å—Ç–æ–µ", callback_data="fat"),
                   InlineKeyboardButton(text="–•—É–¥–æ–µ", callback_data="skinny"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–≥—É—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)


    if call.data == "–≥—Ä—É–¥—å":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–û–≥—Ä–æ–º–Ω–∞—è", callback_data="huge_b"),
                   InlineKeyboardButton(text="–ë–æ–ª—å—à–∞—è", callback_data="big_b"),
                   InlineKeyboardButton(text="–°—Ä–µ–¥–Ω—è—è", callback_data="medium-sized_b"),
                   InlineKeyboardButton(text="–ú–∞–ª–µ–Ω—å–∫–∞—è", callback_data="small_b"),
                   InlineKeyboardButton(text="–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è", callback_data="natural_b"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)

    if call.data == "–ø–æ–ø–∞":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–û–≥—Ä–æ–º–Ω—ã–µ", callback_data="huge_a"),
                   InlineKeyboardButton(text="–ë–æ–ª—å—à–∏–µ", callback_data="big_a"),
                   InlineKeyboardButton(text="–°—Ä–µ–¥–Ω–∏–µ", callback_data="medium-sized_a"),
                   InlineKeyboardButton(text="–ú–∞–ª–µ–Ω—å–∫–∏–µ", callback_data="small_a"),
                   InlineKeyboardButton(text="–ö—Ä—É–≥–ª—ã–µ", callback_data="round_a"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —è–≥–æ–¥–∏—Ü –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)



    if call.data == "–ª—è–∂–∫–∏":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–¢–æ–ª—Å—Ç—ã–µ", callback_data="fat_l"),
                   InlineKeyboardButton(text="–ü—ã—à–Ω—ã–µ", callback_data="busty_l"),
                   InlineKeyboardButton(text="–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ", callback_data="sporty_l"),
                   InlineKeyboardButton(text="–•—É–¥—ã–µ", callback_data="skinny_l"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ª—è–∂–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)


    if call.data == "—Ä–∞—Å—ã":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ß–µ–ª–æ–≤–µ–∫", callback_data="human"),
                   InlineKeyboardButton(text="–ê–Ω–≥–µ–ª", callback_data="angel"),
                   InlineKeyboardButton(text="–î–µ–º–æ–Ω", callback_data="demon"),
                   InlineKeyboardButton(text="–†–µ–ø—Ç–∏–ª–∏—è", callback_data="reptile"),
                   InlineKeyboardButton(text="–†–æ–±–æ—Ç", callback_data="robot"),
                   InlineKeyboardButton(text="–°—É–∫–∫—É–±", callback_data="succubus"),
                   InlineKeyboardButton(text="–§–µ—è", callback_data="fairy"),
                   InlineKeyboardButton(text="–§—É—Ä—Ä–∏", callback_data="furry"),
                   InlineKeyboardButton(text="–≠–ª—å—Ñ", callback_data="elf"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá', reply_markup=markup)


    if call.data == "—Ä–µ–∞–ª–∏–∑–º" or call.data == "–∞–Ω–∏–º–µ" or call.data == "–∞—Ä—Ç":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'style' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['style'], text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {call.data}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {call.data}").message_id
            TO_ADD = f'"style":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        if call.data == "—Ä–µ–∞–ª–∏–∑–º":
            ADD_STYLE(call.from_user.id, '"style":"photorealism"')
        elif call.data == "–∞–Ω–∏–º–µ":
            ADD_STYLE(call.from_user.id, '"style":"anime"')
        elif call.data == "–∞—Ä—Ç":
            ADD_STYLE(call.from_user.id, '"style":"art"')
        choice_menu(call_id, call.from_user.id)
    if call.data == "–ø–æ–ª":
        markup = InlineKeyboardMarkup()
        button_female = InlineKeyboardButton(text="–ú—É–∂—Å–∫–æ–π", callback_data="–º—É–∂—Å–∫–æ–π")
        button_male = InlineKeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π", callback_data="–∂–µ–Ω—Å–∫–∏–π")
        button_cancel = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞")
        markup.add(button_female, button_male, button_cancel)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª üëá', reply_markup=markup)
    if call.data == "–º—É–∂—Å–∫–æ–π":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'gender' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['gender'], text="‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª: –º—É–∂—Å–∫–æ–π")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, "‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª: –º—É–∂—Å–∫–æ–π").message_id
            TO_ADD = f'"gender":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += '"gender":"man", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)
    if call.data == "–∂–µ–Ω—Å–∫–∏–π":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        if 'gender' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['gender'], text="‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª: –∂–µ–Ω—Å–∫–∏–π")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, "‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª: –∂–µ–Ω—Å–∫–∏–π").message_id
            TO_ADD = f'"gender":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += '"gender":"woman", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)



    if call.data == "–Ω–∞—Ü–∏—è":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ë–µ–ª—ã–µ", callback_data="white"),
                   InlineKeyboardButton(text="–ï–≤—Ä–æ–ø–µ–π—Ü—ã", callback_data="european"),
                   InlineKeyboardButton(text="–ß–µ—Ä–Ω—ã–µ", callback_data="black"),
                   InlineKeyboardButton(text="–õ–∞—Ç–∏–Ω—ã", callback_data="latin"),
                   InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–µ", callback_data="russian"),
                   InlineKeyboardButton(text="–ê–≤—Å—Ç—Ä–∏–π—Ü—ã", callback_data="austrian"),
                   InlineKeyboardButton(text="–ê–º–µ—Ä–∏–∫–∞–Ω—Ü—ã", callback_data="american"),
                   InlineKeyboardButton(text="–ê—Ä–∞–±—ã", callback_data="arab"),
                   InlineKeyboardButton(text="–ê—Ä–º—è–Ω–µ", callback_data="armenian"),
                   InlineKeyboardButton(text="–ë–µ–ª–æ—Ä—É—Å—ã", callback_data="belarusian"),
                   InlineKeyboardButton(text="–ë—Ä–∞–∑–∏–ª—å—Ü—ã", callback_data="brazilian"),
                   InlineKeyboardButton(text="–ë—Ä–∏—Ç–∞–Ω—Ü—ã", callback_data="british"),
                   InlineKeyboardButton(text="–†—É–º—ã–Ω—ã", callback_data="romanians"),
                   InlineKeyboardButton(text="–¢–∞—Ç–∞—Ä—ã", callback_data="tatar"),
                   InlineKeyboardButton(text="–¢—É—Ä–∫–∏", callback_data="turk"),
                   InlineKeyboardButton(text="–í—å–µ—Ç–Ω–∞–º—Ü—ã", callback_data="vietnamese"),
                   InlineKeyboardButton(text="–ì—Ä–µ–∫–∏", callback_data="greek"),
                   InlineKeyboardButton(text="–ì—Ä—É–∑–∏–Ω—ã", callback_data="georgian"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"),
                   InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥>>", callback_data="–≤–ø–µ—Ä–µ–¥"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá", reply_markup=markup)


    if call.data == "–≤–ø–µ—Ä–µ–¥":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ï–≥–∏–ø—Ç—è–Ω–µ", callback_data="egyptian"),
                   InlineKeyboardButton(text="–ò—Å–ø–∞–Ω—Ü—ã", callback_data="spaniard"),
                   InlineKeyboardButton(text="–ò—Ç–∞–ª—å—è–Ω—Ü—ã", callback_data="italian"),
                   InlineKeyboardButton(text="–ö–∞–∑–∞—Ö–∏", callback_data="kazakhs"),
                   InlineKeyboardButton(text="–ö–∏—Ç–∞–π—Ü—ã", callback_data="chinese"),
                   InlineKeyboardButton(text="–ö–æ—Ä–µ–π—Ü—ã", callback_data="korean"),
                   InlineKeyboardButton(text="–Ø–ø–æ–Ω—Ü—ã", callback_data="japanese"),
                   InlineKeyboardButton(text="–ù–µ–º—Ü—ã", callback_data="german"),
                   InlineKeyboardButton(text="–ü–µ—Ä—Å—ã", callback_data="persian"),
                   InlineKeyboardButton(text="–ü–æ–ª—è–∫–∏", callback_data="pole"),
                   InlineKeyboardButton(text="–ü–æ—Ä—Ç—É–≥–∞–ª—å—Ü—ã", callback_data="portuguese"),
                   InlineKeyboardButton(text="–£–∫—Ä–∞–∏–Ω—Ü—ã", callback_data="ukrainians"),
                   InlineKeyboardButton(text="–§—Ä–∞–Ω—Ü—É–∑—ã", callback_data="french"),
                   InlineKeyboardButton(text="–ß–µ—Ö–∏", callback_data="czech"),
                   InlineKeyboardButton(text="–®–≤–µ–¥—ã", callback_data="swede"),
                   InlineKeyboardButton(text="<<–ù–∞–∑–∞–¥", callback_data="–Ω–∞–∑–∞–¥"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞")
                   )
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá", reply_markup=markup)

    if call.data == "–Ω–∞–∑–∞–¥":
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–ë–µ–ª—ã–µ", callback_data="white"),
                   InlineKeyboardButton(text="–ï–≤—Ä–æ–ø–µ–π—Ü—ã", callback_data="european"),
                   InlineKeyboardButton(text="–ß–µ—Ä–Ω—ã–µ", callback_data="black"),
                   InlineKeyboardButton(text="–õ–∞—Ç–∏–Ω—ã", callback_data="latin"),
                   InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–µ", callback_data="russian"),
                   InlineKeyboardButton(text="–ê–≤—Å—Ç—Ä–∏–π—Ü—ã", callback_data="austrian"),
                   InlineKeyboardButton(text="–ê–º–µ—Ä–∏–∫–∞–Ω—Ü—ã", callback_data="american"),
                   InlineKeyboardButton(text="–ê—Ä–∞–±—ã", callback_data="arab"),
                   InlineKeyboardButton(text="–ê—Ä–º—è–Ω–µ", callback_data="armenian"),
                   InlineKeyboardButton(text="–ë–µ–ª–æ—Ä—É—Å—ã", callback_data="belarusian"),
                   InlineKeyboardButton(text="–ë—Ä–∞–∑–∏–ª—å—Ü—ã", callback_data="brazilian"),
                   InlineKeyboardButton(text="–ë—Ä–∏—Ç–∞–Ω—Ü—ã", callback_data="british"),
                   InlineKeyboardButton(text="–†—É–º—ã–Ω—ã", callback_data="romanians"),
                   InlineKeyboardButton(text="–¢–∞—Ç–∞—Ä—ã", callback_data="tatar"),
                   InlineKeyboardButton(text="–¢—É—Ä–∫–∏", callback_data="turk"),
                   InlineKeyboardButton(text="–í—å–µ—Ç–Ω–∞–º—Ü—ã", callback_data="vietnamese"),
                   InlineKeyboardButton(text="–ì—Ä–µ–∫–∏", callback_data="greek"),
                   InlineKeyboardButton(text="–ì—Ä—É–∑–∏–Ω—ã", callback_data="georgian"),
                   InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="–æ—Ç–º–µ–Ω–∞"),
                   InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥>>", callback_data="–≤–ø–µ—Ä–µ–¥"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Ü–∏—é –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üëá", reply_markup=markup)

    if call.data in NATIONS.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(NATIONS.values()).index(call.data)
        key = list(NATIONS.keys())[value]
        if 'nation' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['nation'], text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –Ω–∞—Ü–∏—è: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –Ω–∞—Ü–∏—è: {key.lower()}").message_id
            TO_ADD = f'"nation":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"nation":"{call.data} nation", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in RACES.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(RACES.values()).index(call.data)
        key = list(RACES.keys())[value]
        if 'race' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['race'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Ä–∞—Å–∞: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Ä–∞—Å–∞: {key.lower()}").message_id
            TO_ADD = f'"race":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"race":"{call.data} race", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in BODY.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(BODY.values()).index(call.data)
        key = list(BODY.keys())[value]
        if 'body' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['body'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Ñ–∏–≥—É—Ä–∞: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Ñ–∏–≥—É—Ä–∞: {key.lower()}").message_id
            TO_ADD = f'"body":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        if call.data == "sporty":
            CURR_PROMPT += f'"body":"athletic figure", '
        else:
            CURR_PROMPT += f'"body":"{call.data} body", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)


    if call.data in BOOBS.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(BOOBS.values()).index(call.data)
        key = list(BOOBS.keys())[value]
        if 'boobs' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['boobs'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏: {key.lower()}").message_id
            TO_ADD = f'"boobs":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"boobs":"{call.data[:-2]} boobs", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in ASS.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(ASS.values()).index(call.data)
        key = list(ASS.keys())[value]
        if 'ass' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['ass'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä —è–≥–æ–¥–∏—Ü: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä —è–≥–æ–¥–∏—Ü: {key.lower()}").message_id
            TO_ADD = f'"ass":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"ass":"{call.data[:-2]} ass", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in PLACES.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(PLACES.values()).index(call.data)
        key = list(PLACES.keys())[value]
        if 'place' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['place'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è: {key.lower()}").message_id
            TO_ADD = f'"place":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"place":"{call.data}", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in LEGS.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(LEGS.values()).index(call.data)
        key = list(LEGS.keys())[value]
        if 'legs' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['legs'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä –ª—è–∂–µ–∫: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä –ª—è–∂–µ–∫: {key.lower()}").message_id
            TO_ADD = f'"legs":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"legs":"{call.data[:-2]} legs", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in HAIRCUT.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(HAIRCUT.values()).index(call.data)
        key = list(HAIRCUT.keys())[value]
        if 'haircut' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['haircut'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø—Ä–∏—á–µ—Å–∫–∞: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø—Ä–∏—á–µ—Å–∫–∞: {key.lower()}").message_id
            TO_ADD = f'"haircut":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"haircut":"{call.data} haircut", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in HAIRCOLOR.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(HAIRCOLOR.values()).index(call.data)
        key = list(HAIRCOLOR.keys())[value]
        if 'haircolor' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['haircolor'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Ü–≤–µ—Ç –≤–æ–ª–æ—Å: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Ü–≤–µ—Ç –≤–æ–ª–æ—Å: {key.lower()}").message_id
            TO_ADD = f'"haircolor":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"haircolor":"{call.data[:-2]} hair", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in EYESCOLOR.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(EYESCOLOR.values()).index(call.data)
        key = list(EYESCOLOR.keys())[value]
        if 'eyes color' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['eyes color'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω —Ü–≤–µ—Ç –≥–ª–∞–∑: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω —Ü–≤–µ—Ç –≥–ª–∞–∑: {key.lower()}").message_id
            TO_ADD = f'"eyes color":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"eyes color":"{call.data[:-2]} eyes", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in CLOTHES.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(CLOTHES.values()).index(call.data)
        key = list(CLOTHES.keys())[value]
        if 'clothes' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['clothes'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –æ–¥–µ–∂–¥–∞: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –æ–¥–µ–∂–¥–∞: {key.lower()}").message_id
            TO_ADD = f'"clothes":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"clothes":"{call.data}", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in POSES.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(POSES.values()).index(call.data)
        key = list(POSES.keys())[value]
        if 'pose' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['pose'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–æ–∑–∞: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–æ–∑–∞: {key.lower()}").message_id
            TO_ADD = f'"pose":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"pose":"{call.data} pose", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        choice_menu(call_id, call.from_user.id)

    if call.data in EMOTIONS.values():
        bot.delete_message(call.message.chat.id, call.message.message_id)
        MESSAGES_IDS = eval(", ".join(GET_MESSAGES_IDS(call.from_user.id)) + '}')
        value = list(EMOTIONS.values()).index(call.data)
        key = list(EMOTIONS.keys())[value]
        if 'emotion' in MESSAGES_IDS.keys():
            try:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=MESSAGES_IDS['emotion'],
                                      text=f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —ç–º–æ—Ü–∏—è: {key.lower()}")
            except:
                pass
        else:
            id_of_message = bot.send_message(call.message.chat.id, f"‚úÖ –í—ã–±—Ä–∞–Ω–∞ —ç–º–æ—Ü–∏—è: {key.lower()}").message_id
            TO_ADD = f'"emotion":{id_of_message}, '
            ADD_MESSAGES_IDS(call.from_user.id, TO_ADD)
        CURR_PROMPT = ", ".join(GET_PROMPT(call.from_user.id))
        CURR_PROMPT += f'"emotion":"{call.data}", '
        UPDATE(call.from_user.id, CURR_PROMPT)
        FACE_MENU(call_id)



@bot.shipping_query_handler(func=lambda query: True)
def shipping(shipping_query):
    bot.answer_shipping_query(shipping_query.id, ok=True)

@bot.pre_checkout_query_handler(func=lambda query: True)
def pre_checkout_query(pre_checkout_query):
    bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

@bot.message_handler(content_types=['successful_payment'])
def successful_payment(message):
    global DURATION
    #global PROMPT
    global MESSAGES_IDS
    if len(DURATION):
        bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ {DURATION}!")
        bot.send_message(message.chat.id, f"–ó–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω, –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å üïê")

        if DURATION == "1 –º–µ—Å—è—Ü":
            TIME = str(int(time.time()) + days_to_sec(30))
            with conn.cursor() as cursor:
                cursor.execute(
                    f"""UPDATE subscriptions
                                 SET sub_until = {TIME}
                                 WHERE id_s = {message.from_user.id};
                               """
                )
                conn.commit()
    else:
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!")
        bot.send_message(message.chat.id, f"–ó–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω, –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å üïê")
    PROMPT = GET_PROMPT(message.from_user.id)
    PROMPT = eval(", ".join(PROMPT) + '}')
    LIST = list(PROMPT.values())
    request = ', '.join(LIST)
    if ' woman' in request:
        request += ', soft light, cinematic light, a neat vagina, beautiful, cute face, pretty face, without pants, full body, show vagina, shaved vagina, shaved body, correct anatomy of the fingers, two arms, '
    elif ' man' in request:
        request += ', soft light, cinematic light, without pants, full body, handsome, correct anatomy of the fingers, two arms, '
    else:
        request += ', soft light, cinematic light, without pants, full body, correct anatomy of the fingers, two arms, '
    style = ", ".join(GET_STYLE(message.from_user.id)).split('"')
    request += style[-2]
    link = zapros(request, style[-2])
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É", callback_data="restart photo"))
    bot.send_photo(chat_id=message.chat.id, photo=f"{link}", caption=f"‚úåÔ∏è –§–æ—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!"    ,
                   reply_markup=markup)
    UPDATE(message.from_user.id, '{"clothe":"naked", ')
    with conn.cursor() as cursor:
        cursor.execute(
            f"""UPDATE subscriptions   
                SET MESSAGES = '{chr(123)}"shablon":"777", '
    	        WHERE id_s = {message.from_user.id};"""
        )
        conn.commit()

bot.infinity_polling()
